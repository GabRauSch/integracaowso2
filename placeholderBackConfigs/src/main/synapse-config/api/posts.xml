<?xml version="1.0" encoding="UTF-8"?>
<api context="/placeposts" name="posts" xmlns="http://ws.apache.org/ns/synapse">
    <resource methods="GET" uri-template="/{postId}">
        <inSequence>
            <call>
                <endpoint key="postById"/>
            </call>
            <enrich>
                <source clone="true" type="body"/>
                <target property="gabriel" type="property"/>
            </enrich>
            <property expression="json-eval($.userId)" name="uri.var.userId" scope="default" type="STRING"/>
            <call>
                <endpoint key="userById"/>
            </call>
            <enrich>
                <source clone="true" type="body"/>
                <target property="raulino" type="property"/>
            </enrich>
            <log level="custom">
                <property expression="get-property('gabriel')" name="gab"/>
                <property expression="get-property('raulino')" name="rau"/>
            </log>
            <payloadFactory media-type="json">
                <format>{&#xd;
				"name":"$1",&#xd;
				"email":"$2",&#xd;
				"title":"$3",&#xd;
				"body":"$4"&#xd;
				}</format>
                <args>
                    <arg evaluator="json" expression="$ctx:raulino.name"/>
                    <arg evaluator="json" expression="$ctx:raulino.email"/>
                    <arg evaluator="json" expression="$ctx:gabriel.title"/>
                    <arg evaluator="json" expression="$ctx:gabriel.body"/>
                </args>
            </payloadFactory>
            <respond/>
        </inSequence>
        <outSequence/>
        <faultSequence/>
    </resource>
    <resource methods="GET" uri-template="/userposts/{userId}">
        <inSequence>
            <call>
                <endpoint key="userById"/>
            </call>
            <enrich>
                <source clone="true" type="body"/>
                <target property="userInfo" type="property"/>
            </enrich>
            <call>
                <endpoint key="getAllPosts"/>
            </call>
            <property name="data" scope="default" type="STRING" value="[]"/>
            <foreach expression="json-eval($)">
                <sequence>
                    <filter regex="1" source="json-eval($.userId)">
                        <then>
                            <enrich>
                                <source clone="true" type="body"/>
                                <target action="child" property="data" type="property"/>
                            </enrich>
                        </then>
                        <else>
                            <drop/>
                        </else>
                    </filter>
                </sequence>
            </foreach>
            <payloadFactory media-type="json">
                <format>{&#xd;
"user": {&#xd;
	"name": "$1"&#xd;
	"email":"$2"&#xd;
},&#xd;
"posts": $3&#xd;
&#xd;
}</format>
                <args>
                    <arg evaluator="json" expression="$ctx:userInfo.name"/>
                    <arg evaluator="json" expression="$ctx:userInfo.email"/>
                    <arg evaluator="json" expression="$ctx:data"/>
                </args>
            </payloadFactory>
            <respond/>
        </inSequence>
        <outSequence/>
        <faultSequence/>
    </resource>
    <resource methods="GET" uri-template="/search/{string}">
        <inSequence>
            <property expression="$ctx:uri.var.string" name="search" scope="default" type="STRING"/>
            <call>
                <endpoint key="getAllPosts"/>
            </call>
            
            <property name="data" scope="default" type="STRING" value="[]"/>
            
            <foreach expression="json-eval($.)">
                <sequence>
                    <property name="title" expression="json-eval($.title)"/>
                    <property name="body" expression="json-eval($.body)"/>
                    <property name="text" expression="fn:concat($ctx:title, $ctx:body)"/>
                    <property name="contains" expression="fn:contains($ctx:text, $ctx:search)"/>

                    <log level="custom">
                        <property name="text" expression="json-eval($.title)"/>
                        <property name="searchlog" expression="$ctx:search"></property>
                        <property name="contains" expression="fn:contains($ctx:title, $ctx:search)"/>
                    </log>

                    <filter regex="true" source="get-property('contains')">
                        <then>
                            <enrich>
                                <source clone="true" type="body"/>
                                <target action="child" property="data" type="property"/>
                            </enrich>
                        </then>
                        <else/>
                    </filter>
                </sequence>
            </foreach>

            <payloadFactory media-type="json">
                <format>{&#xd;
"data": $1
                }</format>
                <args>
                    <arg evaluator="json" expression="$ctx:data"/>
                </args>
            </payloadFactory>

            <respond/>
        </inSequence>
        <outSequence/>
        <faultSequence/>
    </resource>



    <resource methods="GET" uri-template="/user/search">
        <inSequence>
            <property expression="$ctx:query.param.info" name="info"/>            
            <call>
                <endpoint key="getAllUsers"/>
            </call>

            <property name="data" scope="default" type="STRING" value="[]"/>
            
            <foreach expression="json-eval($.)">
                <sequence>
                <property name="name" expression="json-eval($.name)"/>
                <property name="user" expression="json-eval($.username)"/>
                <property name="company" expression="json-eval($.company.name)"/>

                <property name="comparableSource" expression="fn:concat($ctx:name, $ctx:user, $ctx:company)"/>
                <property name="contains" expression="fn:contains($ctx:comparableSource, $ctx:info)"/>

                <filter regex="true" source="get-property('contains')">
                    <then>
                        <enrich>
                            <source clone="true" type="body"/>
                            <target action="child" property="data" type="property"/>
                        </enrich>
                    </then>
                    <else/>
                </filter>
                </sequence>
            </foreach>

            <payloadFactory media-type="json">
                <format>{&#xd;
"data": $1
                }</format>
                <args>
                    <arg evaluator="json" expression="$ctx:data"/>
                </args>
            </payloadFactory>

            <respond/>
        </inSequence>
        <outSequence/>
        <faultSequence/>
    </resource>



    <resource methods="GET" uri-template="/user/{userId}/albums">
        <inSequence>
        
            <log level="custom">
                <property name="var" expression="$ctx:uri.var.userId"/>
            </log>
            <call>
                <endpoint key="albumByUserId"/>
            </call>

            <respond/>
        </inSequence>
        <outSequence/>
        <faultSequence/>
    </resource>


</api>
